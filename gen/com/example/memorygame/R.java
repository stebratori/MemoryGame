/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.example.memorygame;

public final class R {
    public static final class anim {
        public static final int blink=0x7f040000;
        public static final int denmark_faroe=0x7f040001;
        public static final int denmark_finland=0x7f040002;
        public static final int denmark_finlandy=0x7f040003;
        public static final int denmark_iceland=0x7f040004;
        public static final int denmark_norway=0x7f040005;
        public static final int denmark_sweden=0x7f040006;
        public static final int fade_in=0x7f040007;
        public static final int fade_out=0x7f040008;
        public static final int falling1=0x7f040009;
        public static final int falling2=0x7f04000a;
        public static final int falling21=0x7f04000b;
        public static final int falling22=0x7f04000c;
        public static final int falling23=0x7f04000d;
        public static final int falling24=0x7f04000e;
        public static final int falling25=0x7f04000f;
        public static final int falling3=0x7f040010;
        public static final int falling4=0x7f040011;
        public static final int falling5=0x7f040012;
        public static final int faroe_denmark=0x7f040013;
        public static final int faroe_finland=0x7f040014;
        public static final int faroe_iceland=0x7f040015;
        public static final int faroe_island=0x7f040016;
        public static final int faroe_norway=0x7f040017;
        public static final int faroe_shop=0x7f040018;
        public static final int faroe_sweden=0x7f040019;
        public static final int finland_denmark=0x7f04001a;
        public static final int finland_faroe=0x7f04001b;
        public static final int finland_iceland=0x7f04001c;
        public static final int finland_norway=0x7f04001d;
        public static final int finland_sweden=0x7f04001e;
        public static final int island_denmark=0x7f04001f;
        public static final int island_faroe=0x7f040020;
        public static final int island_finland=0x7f040021;
        public static final int island_norway=0x7f040022;
        public static final int island_shop=0x7f040023;
        public static final int island_sweden=0x7f040024;
        public static final int move1=0x7f040025;
        public static final int move2=0x7f040026;
        public static final int move3=0x7f040027;
        public static final int move4=0x7f040028;
        public static final int norway_denmark=0x7f040029;
        public static final int norway_faroe=0x7f04002a;
        public static final int norway_finland=0x7f04002b;
        public static final int norway_iceland=0x7f04002c;
        public static final int norway_sweden=0x7f04002d;
        public static final int shop_denmark=0x7f04002e;
        public static final int shop_faroe=0x7f04002f;
        public static final int shop_finland=0x7f040030;
        public static final int shop_island=0x7f040031;
        public static final int shop_norway=0x7f040032;
        public static final int shop_sweden=0x7f040033;
        public static final int sweden_denmark=0x7f040034;
        public static final int sweden_faroe=0x7f040035;
        public static final int sweden_finland=0x7f040036;
        public static final int sweden_iceland=0x7f040037;
        public static final int sweden_norway=0x7f040038;
    }
    public static final class attr {
        /** 
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins. When set to alignBounds,
        causes alignment to take place between the edges of the view.
        The default is alignMargins.
        See {@link android.widget.GridLayout#setAlignmentMode(int)}.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignBounds</code></td><td>0</td><td>
            Align the bounds of the children.
            See {@link android.widget.GridLayout#ALIGN_BOUNDS}.
            </td></tr>
<tr><td><code>alignMargins</code></td><td>1</td><td>
            Align the margins of the children.
            See {@link android.widget.GridLayout#ALIGN_MARGINS}.
            </td></tr>
</table>
         */
        public static final int alignmentMode=0x7f010004;
        /**  The maximum number of columns to create when automatically positioning children. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnCount=0x7f010002;
        /** 
        When set to true, forces column boundaries to appear in the same order
        as column indices.
        The default is true.
        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnOrderPreserved=0x7f010006;
        /** 
        The column boundary delimiting the left of the group of cells
        occupied by this view.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_column=0x7f010009;
        /** 
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_columnSpan=0x7f01000a;
        /** 
        Gravity specifies how a component should be placed in its group of cells.
        The default is LEFT | BASELINE.
        See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
         */
        public static final int layout_gravity=0x7f01000b;
        /**  END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_row=0x7f010007;
        /** 
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_rowSpan=0x7f010008;
        /** 
              support versions. All attributes not present in ViewGroup/View are
              redefined in the support library namespace.
        

        The orientation property is not used during layout. It is only used to
        allocate row and column parameters when they are not specified by its children's
        layout parameters. GridLayout works like LinearLayout in this case;
        putting all the components either in a single row or in a single column -
        depending on the value of this flag. In the horizontal case, a columnCount
        property may be additionally supplied to force new rows to be created when a
        row is full. The rowCount attribute may be used similarly in the vertical case.
        The default is horizontal.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
         */
        public static final int orientation=0x7f010000;
        /**  The maximum number of rows to create when automatically positioning children. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowCount=0x7f010001;
        /** 
        When set to true, forces row boundaries to appear in the same order
        as row indices.
        The default is true.
        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowOrderPreserved=0x7f010005;
        /** 
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.
        The default value is false.
        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int useDefaultMargins=0x7f010003;
    }
    public static final class color {
        public static final int yellowish=0x7f080000;
    }
    public static final class dimen {
        /**  Default screen margins, per the Android Design guidelines. 

         Customize dimensions originally defined in res/values/dimens.xml (such as
         screen margins) for sw720dp devices (e.g. 10" tablets) in landscape here.
    
         */
        public static final int activity_horizontal_margin=0x7f070001;
        public static final int activity_vertical_margin=0x7f070002;
        /**  The default gap between components in a layout. 
         */
        public static final int default_gap=0x7f070000;
    }
    public static final class drawable {
        public static final int arrow=0x7f020000;
        public static final int bronze_110=0x7f020001;
        public static final int bronze_150=0x7f020002;
        public static final int bronze_small=0x7f020003;
        public static final int btn_denmark=0x7f020004;
        public static final int btn_faroe=0x7f020005;
        public static final int btn_finland=0x7f020006;
        public static final int btn_iceland=0x7f020007;
        public static final int btn_norway=0x7f020008;
        public static final int btn_sweden=0x7f020009;
        public static final int card_back=0x7f02000a;
        public static final int card_bottom=0x7f02000b;
        public static final int cloud=0x7f02000c;
        public static final int coins=0x7f02000d;
        public static final int coins1=0x7f02000e;
        public static final int coins_small=0x7f02000f;
        public static final int denmark=0x7f020010;
        public static final int denmark1=0x7f020011;
        public static final int denmark2=0x7f020012;
        public static final int denmark_border=0x7f020013;
        public static final int denmark_btn=0x7f020014;
        public static final int denmark_pressed_btn=0x7f020015;
        public static final int faroe1=0x7f020016;
        public static final int faroe2=0x7f020017;
        public static final int faroe_btn=0x7f020018;
        public static final int faroe_islands_flag=0x7f020019;
        public static final int faroe_pressed_btn=0x7f02001a;
        public static final int fessor_cowboy_large=0x7f02001b;
        public static final int fessor_cowboy_medium=0x7f02001c;
        public static final int fessor_figurine=0x7f02001d;
        public static final int fessor_figurine_glow=0x7f02001e;
        public static final int fessor_figurine_medium=0x7f02001f;
        public static final int fessor_figurine_small=0x7f020020;
        public static final int fessor_indian_large=0x7f020021;
        public static final int fessor_indian_medium=0x7f020022;
        public static final int fessor_pirate_large=0x7f020023;
        public static final int fessor_pirate_medium=0x7f020024;
        public static final int fessor_welcome=0x7f020025;
        public static final int finland=0x7f020026;
        public static final int finland2=0x7f020027;
        public static final int finland_btn=0x7f020028;
        public static final int finland_pressed_btn=0x7f020029;
        public static final int gameboard_forrest_lake=0x7f02002a;
        public static final int gold_110=0x7f02002b;
        public static final int gold_150=0x7f02002c;
        public static final int gold_small=0x7f02002d;
        public static final int green_circle=0x7f02002e;
        public static final int ic_launcher=0x7f02002f;
        public static final int iceland=0x7f020030;
        public static final int iceland2=0x7f020031;
        public static final int iceland_aurora_borealis=0x7f020032;
        public static final int iceland_btn=0x7f020033;
        public static final int iceland_pressed_btn=0x7f020034;
        public static final int lil_cloud_1=0x7f020035;
        public static final int lil_cloud_1_green=0x7f020036;
        public static final int lil_cloud_1_green_streched=0x7f020037;
        public static final int lil_cloud_1_red=0x7f020038;
        public static final int lil_cloud_1_red_streched=0x7f020039;
        public static final int lil_cloud_1_streched=0x7f02003a;
        public static final int memory_game_logo=0x7f02003b;
        public static final int norway1=0x7f02003c;
        public static final int norway2=0x7f02003d;
        public static final int norway_btn=0x7f02003e;
        public static final int norway_pressed_btn=0x7f02003f;
        public static final int ocean_small=0x7f020040;
        public static final int paper1=0x7f020041;
        public static final int red_button=0x7f020042;
        public static final int red_circle=0x7f020043;
        public static final int red_field=0x7f020044;
        public static final int scandinavia_flags_map=0x7f020045;
        public static final int sea=0x7f020046;
        public static final int shop=0x7f020047;
        public static final int silver_110=0x7f020048;
        public static final int silver_150=0x7f020049;
        public static final int silver_small=0x7f02004a;
        public static final int sky=0x7f02004b;
        public static final int sweden1=0x7f02004c;
        public static final int sweden2=0x7f02004d;
        public static final int sweden_btn=0x7f02004e;
        public static final int sweden_pressed_btn=0x7f02004f;
        public static final int white_button=0x7f020050;
        public static final int wrinkly_paper=0x7f020051;
        public static final int yellow_field=0x7f020052;
    }
    public static final class id {
        public static final int action_settings=0x7f060076;
        public static final int alignBounds=0x7f060002;
        public static final int alignMargins=0x7f060003;
        public static final int arrow=0x7f060075;
        public static final int bottom=0x7f060005;
        public static final int btn11_4x6=0x7f06003d;
        public static final int btn12_4x6=0x7f060041;
        public static final int btn13_4x6=0x7f060045;
        public static final int btn14_4x6=0x7f060049;
        public static final int btn21_4x6=0x7f06003e;
        public static final int btn22_4x6=0x7f060042;
        public static final int btn23_4x6=0x7f060046;
        public static final int btn24_4x6=0x7f06004a;
        public static final int btn31_4x6=0x7f06003f;
        public static final int btn32_4x6=0x7f060043;
        public static final int btn33_4x6=0x7f060047;
        public static final int btn34_4x6=0x7f06004b;
        public static final int btn41_4x6=0x7f060040;
        public static final int btn42_4x6=0x7f060044;
        public static final int btn43_4x6=0x7f060048;
        public static final int btn44_4x6=0x7f06004c;
        public static final int button3=0x7f06006e;
        public static final int button4=0x7f06006f;
        public static final int button5=0x7f060070;
        public static final int center=0x7f06000c;
        public static final int center_horizontal=0x7f06000a;
        public static final int center_vertical=0x7f060008;
        public static final int clip_horizontal=0x7f06000f;
        public static final int clip_vertical=0x7f06000e;
        public static final int cloudAnswer1=0x7f060019;
        public static final int cloudAnswer2=0x7f06001b;
        public static final int cloudAnswer3=0x7f06001c;
        public static final int cloudAnswer4=0x7f06001d;
        public static final int cloudGameCoins=0x7f060072;
        public static final int cloudGameMedal=0x7f06006d;
        public static final int cloudQuestion=0x7f06001a;
        public static final int denmarkButton=0x7f060032;
        public static final int end=0x7f060011;
        public static final int faroeBtn=0x7f06002f;
        public static final int fessor=0x7f06002c;
        public static final int fessorFigurine=0x7f060026;
        public static final int fill=0x7f06000d;
        public static final int fill_horizontal=0x7f06000b;
        public static final int fill_vertical=0x7f060009;
        public static final int finlandButton=0x7f060033;
        public static final int flagDenmark=0x7f060013;
        public static final int flagFaroe=0x7f060016;
        public static final int flagFinland=0x7f060015;
        public static final int flagIceland=0x7f060012;
        public static final int flagNorway=0x7f060014;
        public static final int flagSweden=0x7f060017;
        public static final int gameboard=0x7f060018;
        public static final int gameboardCoins=0x7f060028;
        public static final int gameboardMedal=0x7f06002a;
        public static final int gamemapBronzeMedal=0x7f060038;
        public static final int gamemapCoins=0x7f060037;
        public static final int gamemapGoldMedal=0x7f06003a;
        public static final int gamemapSilverMedal=0x7f060039;
        public static final int horizontal=0x7f060000;
        public static final int iceland_memory_game=0x7f06003c;
        public static final int imageButtonShop=0x7f06002d;
        public static final int imageView1=0x7f060029;
        public static final int imageView2=0x7f060035;
        public static final int imageView3=0x7f060034;
        public static final int imageView4=0x7f060036;
        public static final int imageView5=0x7f060073;
        public static final int imageView6=0x7f060074;
        public static final int islandBtn=0x7f06002e;
        public static final int left=0x7f060006;
        public static final int map=0x7f06002b;
        public static final int memoryGameCoins=0x7f06006b;
        public static final int memoryGameMedal=0x7f06005e;
        public static final int memoryMedal=0x7f06006c;
        public static final int memory_game=0x7f06003b;
        public static final int minusBtn=0x7f06005f;
        public static final int move1=0x7f060024;
        public static final int move2=0x7f060023;
        public static final int move3=0x7f060025;
        public static final int move44=0x7f060027;
        public static final int mrzimAndroid=0x7f06006a;
        public static final int norwayButton=0x7f060030;
        public static final int plusBtn=0x7f060060;
        public static final int right=0x7f060007;
        public static final int scrollView1=0x7f060061;
        public static final int shopFessorCowboy=0x7f060062;
        public static final int shopFessorHero=0x7f060068;
        public static final int shopFessorIndian=0x7f060063;
        public static final int shopFessorPirate=0x7f060064;
        public static final int start=0x7f060010;
        public static final int statistics_layout=0x7f060071;
        public static final int swedenButton=0x7f060031;
        public static final int textView1=0x7f060066;
        public static final int textView2=0x7f060065;
        public static final int textView3=0x7f060067;
        public static final int textView4=0x7f060069;
        public static final int top=0x7f060004;
        public static final int txt11_4x6=0x7f06004d;
        public static final int txt12_4x6=0x7f06004e;
        public static final int txt13_4x6=0x7f06004f;
        public static final int txt14_4x6=0x7f060050;
        public static final int txt21_4x6=0x7f060051;
        public static final int txt22_4x6=0x7f060052;
        public static final int txt23_4x6=0x7f060053;
        public static final int txt24_4x6=0x7f060054;
        public static final int txt31_4x6=0x7f060055;
        public static final int txt32_4x6=0x7f060056;
        public static final int txt33_4x6=0x7f060057;
        public static final int txt34_4x6=0x7f060058;
        public static final int txt41_4x6=0x7f060059;
        public static final int txt42_4x6=0x7f06005a;
        public static final int txt43_4x6=0x7f06005b;
        public static final int txt44_4x6=0x7f06005c;
        public static final int txtCloudAnswer1=0x7f06001e;
        public static final int txtCloudAnswer2=0x7f06001f;
        public static final int txtCloudAnswer3=0x7f060020;
        public static final int txtCloudAnswer4=0x7f060021;
        public static final int txtCloudEquation=0x7f060022;
        public static final int txtCoins_4x6=0x7f06005d;
        public static final int vertical=0x7f060001;
    }
    public static final class layout {
        public static final int drag_and_drop=0x7f030000;
        public static final int flag_picker=0x7f030001;
        public static final int gameboard=0x7f030002;
        public static final int gamemap=0x7f030003;
        public static final int memory_game=0x7f030004;
        public static final int memory_game_4x4=0x7f030005;
        public static final int operation_picker=0x7f030006;
        public static final int shop=0x7f030007;
        public static final int shop_dialog=0x7f030008;
        public static final int skyfall=0x7f030009;
        public static final int statistics_screen=0x7f03000a;
    }
    public static final class menu {
        public static final int main=0x7f0b0000;
    }
    public static final class raw {
        public static final int coins_sound=0x7f050000;
    }
    public static final class string {
        public static final int action_settings=0x7f090001;
        public static final int app_name=0x7f090000;
        public static final int hello_world=0x7f090002;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f0a0000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f0a0001;
    }
    public static final class styleable {
        /** Attributes that can be used with a GridLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayout_alignmentMode com.example.memorygame:alignmentMode}</code></td><td>
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins.</td></tr>
           <tr><td><code>{@link #GridLayout_columnCount com.example.memorygame:columnCount}</code></td><td> The maximum number of columns to create when automatically positioning children.</td></tr>
           <tr><td><code>{@link #GridLayout_columnOrderPreserved com.example.memorygame:columnOrderPreserved}</code></td><td>
        When set to true, forces column boundaries to appear in the same order
        as column indices.</td></tr>
           <tr><td><code>{@link #GridLayout_orientation com.example.memorygame:orientation}</code></td><td>
              support versions.</td></tr>
           <tr><td><code>{@link #GridLayout_rowCount com.example.memorygame:rowCount}</code></td><td> The maximum number of rows to create when automatically positioning children.</td></tr>
           <tr><td><code>{@link #GridLayout_rowOrderPreserved com.example.memorygame:rowOrderPreserved}</code></td><td>
        When set to true, forces row boundaries to appear in the same order
        as row indices.</td></tr>
           <tr><td><code>{@link #GridLayout_useDefaultMargins com.example.memorygame:useDefaultMargins}</code></td><td>
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.</td></tr>
           </table>
           @see #GridLayout_alignmentMode
           @see #GridLayout_columnCount
           @see #GridLayout_columnOrderPreserved
           @see #GridLayout_orientation
           @see #GridLayout_rowCount
           @see #GridLayout_rowOrderPreserved
           @see #GridLayout_useDefaultMargins
         */
        public static final int[] GridLayout = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006
        };
        /**
          <p>
          @attr description
          
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins. When set to alignBounds,
        causes alignment to take place between the edges of the view.
        The default is alignMargins.
        See {@link android.widget.GridLayout#setAlignmentMode(int)}.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignBounds</code></td><td>0</td><td>
            Align the bounds of the children.
            See {@link android.widget.GridLayout#ALIGN_BOUNDS}.
            </td></tr>
<tr><td><code>alignMargins</code></td><td>1</td><td>
            Align the margins of the children.
            See {@link android.widget.GridLayout#ALIGN_MARGINS}.
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.memorygame:alignmentMode
        */
        public static final int GridLayout_alignmentMode = 4;
        /**
          <p>
          @attr description
           The maximum number of columns to create when automatically positioning children. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.memorygame:columnCount
        */
        public static final int GridLayout_columnCount = 2;
        /**
          <p>
          @attr description
          
        When set to true, forces column boundaries to appear in the same order
        as column indices.
        The default is true.
        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.memorygame:columnOrderPreserved
        */
        public static final int GridLayout_columnOrderPreserved = 6;
        /**
          <p>
          @attr description
          
              support versions. All attributes not present in ViewGroup/View are
              redefined in the support library namespace.
        

        The orientation property is not used during layout. It is only used to
        allocate row and column parameters when they are not specified by its children's
        layout parameters. GridLayout works like LinearLayout in this case;
        putting all the components either in a single row or in a single column -
        depending on the value of this flag. In the horizontal case, a columnCount
        property may be additionally supplied to force new rows to be created when a
        row is full. The rowCount attribute may be used similarly in the vertical case.
        The default is horizontal.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.memorygame:orientation
        */
        public static final int GridLayout_orientation = 0;
        /**
          <p>
          @attr description
           The maximum number of rows to create when automatically positioning children. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.memorygame:rowCount
        */
        public static final int GridLayout_rowCount = 1;
        /**
          <p>
          @attr description
          
        When set to true, forces row boundaries to appear in the same order
        as row indices.
        The default is true.
        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.memorygame:rowOrderPreserved
        */
        public static final int GridLayout_rowOrderPreserved = 5;
        /**
          <p>
          @attr description
          
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.
        The default value is false.
        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.memorygame:useDefaultMargins
        */
        public static final int GridLayout_useDefaultMargins = 3;
        /** Attributes that can be used with a GridLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_margin android:layout_margin}</code></td><td>
              Specifies extra space on the left, top, right and bottom
              sides of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginBottom android:layout_marginBottom}</code></td><td>
              Specifies extra space on the bottom side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginLeft android:layout_marginLeft}</code></td><td>
              Specifies extra space on the left side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginRight android:layout_marginRight}</code></td><td>
              Specifies extra space on the right side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginTop android:layout_marginTop}</code></td><td>
              Specifies extra space on the top side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_width android:layout_width}</code></td><td>
              support versions.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_column com.example.memorygame:layout_column}</code></td><td>
        The column boundary delimiting the left of the group of cells
        occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_columnSpan com.example.memorygame:layout_columnSpan}</code></td><td>
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_gravity com.example.memorygame:layout_gravity}</code></td><td>
        Gravity specifies how a component should be placed in its group of cells.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_row com.example.memorygame:layout_row}</code></td><td> END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_rowSpan com.example.memorygame:layout_rowSpan}</code></td><td>
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.</td></tr>
           </table>
           @see #GridLayout_Layout_android_layout_height
           @see #GridLayout_Layout_android_layout_margin
           @see #GridLayout_Layout_android_layout_marginBottom
           @see #GridLayout_Layout_android_layout_marginLeft
           @see #GridLayout_Layout_android_layout_marginRight
           @see #GridLayout_Layout_android_layout_marginTop
           @see #GridLayout_Layout_android_layout_width
           @see #GridLayout_Layout_layout_column
           @see #GridLayout_Layout_layout_columnSpan
           @see #GridLayout_Layout_layout_gravity
           @see #GridLayout_Layout_layout_row
           @see #GridLayout_Layout_layout_rowSpan
         */
        public static final int[] GridLayout_Layout = {
            0x010100f4, 0x010100f5, 0x010100f6, 0x010100f7,
            0x010100f8, 0x010100f9, 0x010100fa, 0x7f010007,
            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_height}
          attribute's value can be found in the {@link #GridLayout_Layout} array.
          @attr name android:layout_height
        */
        public static final int GridLayout_Layout_android_layout_height = 1;
        /**
          <p>
          @attr description
          
              Specifies extra space on the left, top, right and bottom
              sides of this view. This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout_margin}.
          @attr name android:layout_margin
        */
        public static final int GridLayout_Layout_android_layout_margin = 2;
        /**
          <p>
          @attr description
          
              Specifies extra space on the bottom side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout_marginBottom}.
          @attr name android:layout_marginBottom
        */
        public static final int GridLayout_Layout_android_layout_marginBottom = 6;
        /**
          <p>
          @attr description
          
              Specifies extra space on the left side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout_marginLeft}.
          @attr name android:layout_marginLeft
        */
        public static final int GridLayout_Layout_android_layout_marginLeft = 3;
        /**
          <p>
          @attr description
          
              Specifies extra space on the right side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout_marginRight}.
          @attr name android:layout_marginRight
        */
        public static final int GridLayout_Layout_android_layout_marginRight = 5;
        /**
          <p>
          @attr description
          
              Specifies extra space on the top side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout_marginTop}.
          @attr name android:layout_marginTop
        */
        public static final int GridLayout_Layout_android_layout_marginTop = 4;
        /**
          <p>
          @attr description
          
              support versions. All attributes not present in MarginLayout are
              redefined in the support library name space.
        
 START MarginLayout layoutparams 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout_width}.
          @attr name android:layout_width
        */
        public static final int GridLayout_Layout_android_layout_width = 0;
        /**
          <p>
          @attr description
          
        The column boundary delimiting the left of the group of cells
        occupied by this view.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.memorygame:layout_column
        */
        public static final int GridLayout_Layout_layout_column = 9;
        /**
          <p>
          @attr description
          
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.memorygame:layout_columnSpan
        */
        public static final int GridLayout_Layout_layout_columnSpan = 10;
        /**
          <p>
          @attr description
          
        Gravity specifies how a component should be placed in its group of cells.
        The default is LEFT | BASELINE.
        See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.memorygame:layout_gravity
        */
        public static final int GridLayout_Layout_layout_gravity = 11;
        /**
          <p>
          @attr description
           END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.memorygame:layout_row
        */
        public static final int GridLayout_Layout_layout_row = 7;
        /**
          <p>
          @attr description
          
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.memorygame:layout_rowSpan
        */
        public static final int GridLayout_Layout_layout_rowSpan = 8;
    };
}
